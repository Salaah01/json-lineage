var searchIndex = JSON.parse('{\
"jsonl_converter":{"doc":"","t":"AAAAADLLFLLLFLFLLLLLMLLLFDLLLLLLLLLLLLLDLLLLLLLLLLDLLLLLLLLLLLF","n":["brackets","cli","json_object","processor","reader","BracketStack","borrow","borrow_mut","brackets_map","from","into","into_iter","is_closing_bracket","is_empty","is_opening_bracket","len","new","next","pop_pair","push","stack","try_from","try_into","type_id","get_filepath","JSONLString","borrow","borrow_mut","clear","fmt","from","into","new","push_char","push_str","to_string","try_from","try_into","type_id","Processor","borrow","borrow_mut","from","into","new","process_char","push_bracket","try_from","try_into","type_id","ByteIterator","borrow","borrow_mut","from","into","into_iter","new","next","next_char","try_from","try_into","type_id","verify_first_char"],"q":[[0,"jsonl_converter"],[5,"jsonl_converter::brackets"],[24,"jsonl_converter::cli"],[25,"jsonl_converter::json_object"],[39,"jsonl_converter::processor"],[50,"jsonl_converter::reader"]],"d":["This module helps us keep track of brackets that have been …","Contains CLI related code.","This module contains structs that represent JSON objects …","This module contains the functionality to process a stream …","This module contains the <code>ByteIterator</code> struct, which is …","This struct is used to keep track of brackets that have …","","","Returns a map of brackets with their corresponding opening …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Checks if a character is a closing bracket. Note: this …","Checks if the <code>BracketStack</code> is empty.","Checks if a character is an opening bracket. Note: this …","","Creates a new <code>BracketStack</code>.","","Pops a bracket off of the <code>BracketStack</code>.","Pushes a bracket onto the <code>BracketStack</code>.","","","","","Returns the filepath from the command line arguments …","This struct represents a JSONL string being built.","","","Clears the <code>string</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new instance of <code>JSONLString</code>.","Adds a character to the <code>string</code>.","Adds a string to the <code>string</code>.","","","","","This struct contains the functionality to process a stream …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new instance of <code>Processor</code>.","Processes a character. This function will either add the …","Adds a bracket to the <code>bracket_stack</code>.","","","","This struct is used to iterate over the bytes of a file.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Creates a new <code>ByteIterator</code> from a file.","Returns the next byte of the file.","Returns the next character of the file.","","","","Verifies that the first character of the file is a ‘[’."],"i":[0,0,0,0,0,0,4,4,0,4,4,4,0,4,0,4,4,4,4,4,4,4,4,4,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,0,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,0],"f":[0,0,0,0,0,0,[[]],[[]],[[],[[2,[1,1]]]],[[]],[[]],[[]],[1,3],[4,3],[1,3],[4,5],[[],4],[4,6],[[4,1],[[6,[1]]]],[[4,1]],0,[[],7],[[],7],[[],8],[[],9],0,[[]],[[]],[10],[[10,11],12],[[]],[[]],[[],10],[[10,1]],[[10,13]],[[],9],[[],7],[[],7],[[],8],0,[[]],[[]],[[]],[[]],[[],14],[[14,1]],[[14,1]],[[],7],[[],7],[[],8],0,[[]],[[]],[[]],[[]],[[]],[13,[[16,[15]]]],[15,6],[15,[[6,[1]]]],[[],7],[[],7],[[],8],[1]],"c":[],"p":[[15,"char"],[3,"HashMap"],[15,"bool"],[3,"BracketStack"],[15,"usize"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"String"],[3,"JSONLString"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"Processor"],[3,"ByteIterator"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
